plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.sangeetha_potha_app_flutter"
    compileSdk = 34  // Changed to 34 for compatibility
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId = "com.example.sangeetha_potha_app_flutter"
        minSdk = flutter.minSdkVersion
        targetSdk = 34  // Changed to 34 for compatibility
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        multiDexEnabled true  // Enable MultiDex support
    }

    buildTypes {
        release {
            minifyEnabled false  // Set to false if you don't want code shrinking
            shrinkResources false  // Also set to false if not shrinking resources
            signingConfig = signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    aaptOptions {
        ignoreAssetsPattern "!*.png"
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:33.7.0')
    implementation 'androidx.multidex:multidex:2.0.1'  // MultiDex dependency
}
